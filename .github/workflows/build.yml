name: Build
on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Checkout submodules (pico-sdk)
      working-directory: ${{github.workspace}}
      run: git submodule update --init --recursive

    - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      id: arm-none-eabi-gcc-action
      with:
        release: 10.3-2021.07
    - run: arm-none-eabi-gcc --version

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      working-directory: ${{github.workspace}}
      run:  cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: PICO_SDK_PATH=../sources/Externals/pico-sdk PICO_TOOLCHAIN_PATH=${{steps.arm-none-eabi-gcc-action.outputs.path}} cmake ../sources -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Get core count
      id: core_count
      run : cat /proc/cpuinfo  | grep processor | wc -l

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE --parallel $(nproc)

